//The sequence of triangle numbers is generated by adding the natural numbers. 
//So the 7th triangle number would be 1+2+3+4+5+6+7=28
//The first ten terms would be:
//		1,3,6,10,15,21,28,36,45,55,...
//Let us list the factors of the first seven triangle numbers:

//		1:	1
//		3:	1,3
//		6:	1,2,3,6
//		10:	1,2,5,10
//		15:	1,3,5,15
//		21:	1,3,7,21
//		28:	1,2,4,7,14,28

//We can see that 28 is the first triangle number to have over 5 divisors.
//What is the value of the first triangle number to have over 500 divisors?

#include <iostream>
#include <cmath>
int triangle_number(int num)
{
	int sum=0;
	for(int i=0;i<num;i++)sum+=i+1;
	return sum;
}
int numFactors(int num)
{
	int count=0;
	for(int i=sqrt(num);i>0;i--)
	{
		if(num%i==0)
		{
			count++;
			if(i*i!=num && i!=1)count++;
		}
		
	}
	return count;
}
int main()
{
	int tri=0,count=0,i=0;
	while(count<500)
	{
		tri=triangle_number(i);
		count=numFactors(tri);
		i++;
	}
	std::cout<<tri<<std::endl;
	//std::cout<< <<std::endl;
	
}